// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADERS_INL_
# define SHADERS_INL_
# define VAR_outCol "r"
# define VAR_params "v"

const char *shader_frag =
 "#version 460\n"
 "layout(location=0) uniform vec4 v;"
 "out vec4 r;"
 "mat2 x(float v)"
 "{"
   "float m=cos(v),d=sin(v);"
   "return mat2(m,-d,d,m);"
 "}"
 "float t(vec3 v)"
 "{"
   "vec3 m=abs(v)-vec3(.5);"
   "return length(max(m,0.))+min(max(m.x,max(m.y,m.z)),0.);"
 "}"
 "float m(vec3 m)"
 "{"
   "float y=1.5*v.z;"
   "m.xz*=x(y);"
   "m.yx*=x(y);"
   "m.zy*=x(y);"
   "return t(m)-.03;"
 "}"
 "float m(vec3 v,vec3 y)"
 "{"
   "float r=0.;"
   "for(float f=0.;f<32.;++f)"
     "{"
       "float n=m(v+y*r);"
       "if(n<.001)"
         "return r;"
       "r+=n;"
     "}"
   "return-1.;"
 "}"
 "vec3 n(vec3 v)"
 "{"
   "vec2 n=vec2(.001,0);"
   "return normalize(vec3(m(v+n.xyy)-m(v-n.xyy),m(v+n.yxy)-m(v-n.yxy),m(v+n.yyx)-m(v-n.yyx)));"
 "}"
 "void main()"
 "{"
   "vec2 f=gl_FragCoord.xy/v.xy;"
   "f-=.5;"
   "f.x*=v.x/v.y;"
   "vec3 y=vec3(0,0,-5),d=normalize(vec3(f,1)),i=vec3(0);"
   "float x=m(y,d);"
   "if(x>0.)"
     "{"
       "vec3 l=normalize(vec3(1,1,-1)),C=n(y+d*x);"
       "float t=pow(1.-max(0.,dot(C,-d)),5.);"
       "i=vec3(.65,.6,.5)*max(0.,dot(C,l))+vec3(.9,.8,.7)*pow(max(0.,dot(C,normalize(l-d))),16.)*(.5+.5*t);"
       "i+=vec3(.1,.2,.3)*.2*(max(0.,-dot(C,l))+t);"
     "}"
   "i=pow(i,vec3(1./2.2));"
   "r=vec4(i,1);"
 "}";

#endif // SHADERS_INL_
